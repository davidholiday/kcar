<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">




<!--<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"-->
         <!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
         <!--xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee-->
         <!--http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"-->
         <!--version="3.1">-->






    <!--<web-app xmlns="http://jakarta.ee/xml/ns/jakartaee"-->
         <!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
         <!--xsi:schemaLocation="http://jakarta.ee/xml/ns/jakartaee-->
         <!--https://jakarta.ee/xml/ns/jakartaee/jakartaee_9.xsd"-->
         <!--version="9">-->

  <!--  -->


  <!--&lt;!&ndash; location of Camel route builder(s) ** this can also be a route xml file w/o the packagescan directive ** &ndash;&gt;-->
  <!--&lt;!&ndash; *ACHTUNG* there can't be any spaces around the ':' separating 'packagescan' and the package name&ndash;&gt;-->
  <!--<context-param>-->
    <!--<param-name>RouteBuilders</param-name>-->
    <!--<param-value>packagescan:com.davidholiday.camel.harness.routebuilders</param-value>-->
  <!--</context-param>-->

  <!-- location of spring xml file(s). used to configure camel context -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:camel-config.xml</param-value>
  </context-param>

  <!-- Camel servlet used in the application -->
  <servlet>
    <servlet-name>CamelServlet</servlet-name>
    <servlet-class>org.apache.camel.component.servlet.CamelHttpTransportServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- Camel servlet mapping -->
  <servlet-mapping>
    <servlet-name>CamelServlet</servlet-name>
    <url-pattern>/*</url-pattern>
  </servlet-mapping>

  <!-- the listener that kick-starts Spring -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

</web-app>
